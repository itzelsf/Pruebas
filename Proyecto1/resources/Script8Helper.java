// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Script8</b><br>
 * Generated     : <b>2018/07/19 10:23:32</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 amd64 6.1 <br>
 * 
 * @since  julio 19, 2018
 * @author DELL
 */
public abstract class Script8Helper extends RationalTestScript
{
	/**
	 * Album: with default state.
	 *		.class : javax.swing.JTabbedPane
	 * 		tabCount : 2
	 * 		accessibleContext.accessibleName : Album
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject album() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("album"));
	}
	/**
	 * Album: with specific test context and state.
	 *		.class : javax.swing.JTabbedPane
	 * 		tabCount : 2
	 * 		accessibleContext.accessibleName : Album
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject album(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("album"), anchor, flags);
	}
	
	/**
	 * Album: with default state.
	 *		.class : javax.swing.JPanel
	 * 		name : panel2
	 */
	protected GuiTestObject album2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("album2"));
	}
	/**
	 * Album: with specific test context and state.
	 *		.class : javax.swing.JPanel
	 * 		name : panel2
	 */
	protected GuiTestObject album2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("album2"), anchor, flags);
	}
	
	/**
	 * Details: with default state.
	 *		.class : javax.swing.JPanel
	 * 		name : panel2a
	 */
	protected GuiTestObject details() 
	{
		return new GuiTestObject(
                        getMappedTestObject("details"));
	}
	/**
	 * Details: with specific test context and state.
	 *		.class : javax.swing.JPanel
	 * 		name : panel2a
	 */
	protected GuiTestObject details(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("details"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"), anchor, flags);
	}
	
	/**
	 * SymphonyNo5: with default state.
	 *		text : Symphony No. 5
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Symphony No. 5
	 * 		name : compositionLabel
	 * 		.classIndex : 1
	 */
	protected GuiTestObject symphonyNo5() 
	{
		return new GuiTestObject(
                        getMappedTestObject("symphonyNo5"));
	}
	/**
	 * SymphonyNo5: with specific test context and state.
	 *		text : Symphony No. 5
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Symphony No. 5
	 * 		name : compositionLabel
	 * 		.classIndex : 1
	 */
	protected GuiTestObject symphonyNo5(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("symphonyNo5"), anchor, flags);
	}
	
	/**
	 * tree2: with default state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tree2() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tree2"));
	}
	/**
	 * tree2: with specific test context and state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tree2(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tree2"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point Details_standard object in the SUT.
	 */
	protected IFtVerificationPoint Details_standardVP() 
	{
		return vp("Details_standard");
	}
	protected IFtVerificationPoint Details_standardVP(TestObject anchor)
	{
		return vp("Details_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point SymphonyNo5_SymphonyNo5 object in the SUT.
	 */
	protected IFtVerificationPoint SymphonyNo5_SymphonyNo5VP() 
	{
		return vp("SymphonyNo5_SymphonyNo5");
	}
	protected IFtVerificationPoint SymphonyNo5_SymphonyNo5VP(TestObject anchor)
	{
		return vp("SymphonyNo5_SymphonyNo5", anchor);
	}
	
	

	protected Script8Helper()
	{
		setScriptName("Script8");
	}
	
}

